if(!require(Rcpp)){install.packages('Rcpp', dependencies = TRUE)}
if(!require(jmv)){install.packages('jmv', dependencies = TRUE)}
if(!require(effsize)){install.packages('effsize', dependencies = TRUE)}
if(!require(Hmisc)){install.packages('effsize', dependencies = TRUE)}
if(!require(psych)){install.packages('psych', dependencies = TRUE)}
if(!require(ggplot2)){install.packages('ggplot2', dependencies = TRUE)}
if(!require(dplyr)){install.packages('dplyr', dependencies = TRUE)}
if(!require(MBESS)){install.packages('MBESS', dependencies = TRUE)}
if(!require(jtools)){install.packages('jtools', dependencies = TRUE)} 
if(!require(tidyr)){install.packages('Rcpp', dependencies = TRUE)}

library(tidyr)
library(jtools)
library(MBESS)
library(psych)
library(ggplot2)
library(dplyr) 
library(Hmisc)
library(effsize)
library(jmv)
library(Rcpp)

# setting formatting options
options(scipen=999.99, digits =7)


# load our dataset 
data <- read.csv("../data/experiment1.csv", header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM")
str(data)

#Show demographics
#Age
data$gender
table(data$gender)
#Gender
data$age
data$age[data$age==99] <- NA
mean(data$age, na.rm = TRUE)
sd(data$age, na.rm = TRUE)

###################
# EXPERIMENT 1 (Hitchhiker-Scenario)

data$Sc1_regret<- factor(data$Sc1_regret)
data$sc1_socnorms1<- factor(data$sc1_socnorms1)
data$sc1_socnorms2<- factor(data$sc1_socnorms2)
data$sc1_combinednorms<- factor(data$sc1_combinednorms)

# Let's label the values better, so it's easier to understand the output.
data$Sc1_regret <- ordered(data$Sc1_regret, levels = c(1,2), labels = c("Exception Jones", "Routine Smith"))
data$sc1_socnorms1 <- ordered(data$sc1_socnorms1, levels = c(1,2), labels = c("Exception Jones", "Routine Smith"))
data$sc1_socnorms2 <- ordered(data$sc1_socnorms2, levels = c(1,2), labels = c("Exception Jones", "Routine Smith"))
data$sc1_combinednorms <- ordered(data$sc1_combinednorms, levels = c(1,2), labels = c("Exception Jones", "Routine Smith"))

# Let's label the variables better, so we'll remember what those mean and it's easier to understand the output when those are reported.
label(data$Sc1_regret) <- "Who experiences higher regret (direct replication)" 
label(data$sc1_socnorms1) <- "Descriptive norms - which is more common?" 
label(data$sc1_socnorms2) <- "Injunctive norms - who is more criticized by society?" 
label(data$sc1_combinednorms) <- "Who experiences higher regret, when asking participants to consider the norm" 


# Let's run the JAMOVI imported syntax 

# Descriptives for the main variables.
# Plots appear in the R Studio Plots section
jmv::descriptives(
  data=data,
  vars=c(
    "Sc1_regret",
    "sc1_socnorms1",
    "sc1_socnorms2",
    "sc1_combinednorms"),
  freq=TRUE)


# binomial Z
jmv::propTest2(
  data=data,
  vars=c(
    "Sc1_regret",
    "sc1_socnorms1",
    "sc1_socnorms2",
    "sc1_combinednorms"),
  ci=TRUE)

jmv::propTestN(
  data=data,
  var="Sc1_regret",
  expected=TRUE,
  ratio=c(1, 1))

jmv::propTestN(
  data=data,
  var="sc1_socnorms1",
  expected=TRUE,
  ratio=c(1, 1))

jmv::propTestN(
  data=data,
  var="sc1_socnorms2",
  expected=TRUE,
  ratio=c(1, 1))

jmv::propTestN(
  data=data,
  var="sc1_combinednorms",
  expected=TRUE,
  ratio=c(1, 1))


# counts
summary(data$Sc1_regret)
summary(data$sc1_socnorms1)
summary(data$sc1_socnorms2)
summary(data$sc1_combinednorms)



# R's way of doing binomial
# we need to count, while excluding NAs
x1 <- sum((data$Sc1_regret[!is.na(data$Sc1_regret)])=="Exception Jones")
n1 <- length(data$Sc1_regret[!is.na(data$Sc1_regret)])
prop.test(x1, n1, p=0.5, correct = FALSE)

x2 <- sum((data$sc1_socnorms1[!is.na(data$sc1_socnorms1)])=="Exception Jones")
n2 <- length(data$sc1_socnorms1[!is.na(data$sc1_socnorms1)])
prop.test(x2, n2, p=0.5, correct = FALSE)

x3 <- sum((data$sc1_socnorms2[!is.na(data$sc1_socnorms2)])=="Exception Jones")
n3 <- length(data$sc1_socnorms2[!is.na(data$sc1_socnorms2)])
prop.test(x3, n3, p=0.5, correct = FALSE)

x4 <- sum((data$sc1_combinednorms[!is.na(data$sc1_combinednorms)])=="Exception Jones")
n4 <- length(data$sc1_combinednorms[!is.na(data$sc1_combinednorms)])
prop.test(x4, n4, p=0.5, correct = FALSE)


# Calculate the proportions for each category
data_proportions <- data %>%
  summarise(
    Regret_Exception = 100 * sum(Sc1_regret == "Exception Jones", na.rm = TRUE) / sum(!is.na(Sc1_regret)),
    Regret_Routine = 100 - Regret_Exception,
    Social_Norms_Injunctive_Exception = 100 * sum(sc1_socnorms1 == "Exception Jones", na.rm = TRUE) / sum(!is.na(sc1_socnorms1)),
    Social_Norms_Injunctive_Routine = 100 - Social_Norms_Injunctive_Exception,
    Social_Norms_Descriptive_Exception = 100 * sum(sc1_socnorms2 == "Exception Jones", na.rm = TRUE) / sum(!is.na(sc1_socnorms2)),
    Social_Norms_Descriptive_Routine = 100 - Social_Norms_Descriptive_Exception,
    Negative_Affect_Exception = 100 * sum(sc1_combinednorms == "Exception Jones", na.rm = TRUE) / sum(!is.na(sc1_combinednorms)),
    Negative_Affect_Routine = 100 - Negative_Affect_Exception
  ) %>%
  pivot_longer(everything(), names_to = "Condition", values_to = "Proportion") %>%
  mutate(
    Group = ifelse(grepl("Exception", Condition), "Exception Jones", "Routine Smith"),
    Condition = sub("_Exception|_Routine", "", Condition),
    Group = factor(Group, levels = c("Routine Smith", "Exception Jones"))
  )

# Create the combined plot
ggplot(data_proportions, aes(x = Condition, y = Proportion, fill = Group)) +
  geom_bar(stat = "identity", position = position_dodge(), width = 0.7) +
  scale_fill_manual(values = c("Routine Smith" = "grey80", "Exception Jones" = "blue")) +
  labs(x = "", y = "Percentage", fill = "Group") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), 
        legend.position = "bottom",
        legend.title = element_blank(),
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        panel.grid.major.y = element_line(color = "grey80")) +
  guides(fill = guide_legend(reverse = TRUE)) +
  ylim(0, 100) # Ensure the y-axis always goes from 0 to 100

# Plot the graph
ggsave("inputs/experiment_1.png", width = 10, height = 6, dpi = 300)
