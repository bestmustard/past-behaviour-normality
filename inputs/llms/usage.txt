LLM: ChatGPT-4.
Date: 16 Mar 2024

Here is a data download script:
#### Preamble ####
# Purpose: Downloads and saves the 2020 CCES data recorded by Schaffner, Brian et.al 
# Author: Victor Ma
# Date: 15 Mar 2024
# Contact: victo.ma@mail.utoronto.ca
# License: MIT



#### Workspace setup ####
library(tidyverse)
library(dplyr)
library(dataverse)
#### Download data ####
ces2020 <-
  get_dataframe_by_name(
    filename = "CES20_Common_OUTPUT_vv.csv",
    dataset = "10.7910/DVN/E9N6PH",
    server = "dataverse.harvard.edu",
    .f = read_csv
  ) |>
  select(votereg, CC20_410, gender, educ, birthyr) # I would have included this only in data cleaning but the 
# raw_data.csv is too large to upload to git without doing this

#### Save data ####
write_csv(ces2020, "data/raw_data/raw_data.csv")


Here is a data cleaning script:
#### Preamble ####
# Purpose: Cleans the raw 2020 CCES data recorded by Schaffner, Brian et.al 
# Author: Victor Ma
# Date: 15 Mar 2024
# Contact: victo.ma@mail.utoronto.ca
# License: MIT

#### Workspace setup ####
library(tidyverse)

#### Clean data ####
raw_data <-
  read_csv(
    "data/raw_data/",
    col_types =
      cols(
        "votereg" = col_integer(),
        "CC20_410" = col_integer(),
        "gender" = col_integer(),
        "educ" = col_integer(),
        "birthyr" = col_integer()
      )
  )

cleaned_data <-
  raw_data |>
  filter(votereg == 1,
         CC20_410 %in% c(1, 2)) |>
  mutate(
    voted_for = if_else(CC20_410 == 1, "Biden", "Trump"),
    voted_for = as_factor(voted_for),
    gender = if_else(gender == 1, "Male", "Female"),
    age = case_when(
      birthyr <= 1955  ~ "65+",
      birthyr > 1955 & birthyr <= 1975  ~ "45-64",
      birthyr > 1975 & birthyr <= 1990~ "30-44",
      birthyr > 1990 & birthyr <= 2002 ~ "18-29",
    ),
    age = factor(
      age,
      levels = c(
        "65+",
        "45-64",
        "30-44",
        "18-29"
      )
    ),
    education = case_when(
      educ == 1 ~ "No HS",
      educ == 2 ~ "High school graduate",
      educ == 3 ~ "Some college",
      educ == 4 ~ "2-year",
      educ == 5 ~ "4-year",
      educ == 6 ~ "Post-grad"
    ),
    education = factor(
      education,
      levels = c(
        "No HS",
        "High school graduate",
        "Some college",
        "2-year",
        "4-year",
        "Post-grad"
      )
    )
  ) |>
  select(voted_for, age, gender, education)


#### Save data ####
write_csv(cleaned_data, "data/analysis_data/analysis_data.csv")

Rather than doing select() on a few columns, rewrite it so that raw_data is a parquet and the data cleaning script saves both data/analysis_data/analysis_data.csv AND a parquet file called analysis_data

GPT
To adjust your scripts so that the data is initially saved as a parquet file and then the data cleaning script saves both a CSV and a parquet file for the analysis data, you need to make modifications to both the download and the cleaning script. Parquet is a columnar storage file format optimized for big data processing and storage efficiency.

Modified Download Script
This script involves saving the initially downloaded data as a parquet file. The R library arrow is excellent for working with parquet files, so it should be added to the workspace setup.

r
Copy code
#### Preamble ####
# Purpose: Downloads and saves the 2020 CCES data recorded by Schaffner, Brian et.al 
# Author: Victor Ma
# Date: 15 Mar 2024
# Contact: victo.ma@mail.utoronto.ca
# License: MIT

#### Workspace setup ####
library(tidyverse)
library(dataverse)
library(arrow) # Add this for parquet file support

#### Download data ####
ces2020 <-
  get_dataframe_by_name(
    filename = "CES20_Common_OUTPUT_vv.csv",
    dataset = "10.7910/DVN/E9N6PH",
    server = "dataverse.harvard.edu",
    .f = read_csv
  ) |>
  select(votereg, CC20_410, gender, educ, birthyr)

#### Save data ####
write_parquet(ces2020, "data/raw_data/raw_data.parquet")
Modified Data Cleaning Script
For the data cleaning script, you need to adjust the script to read from the parquet file, then save the cleaned data in both CSV and parquet formats.

r
Copy code
#### Preamble ####
# Purpose: Cleans the raw 2020 CCES data recorded by Schaffner, Brian et.al 
# Author: Victor Ma
# Date: 15 Mar 2024
# Contact: victo.ma@mail.utoronto.ca
# License: MIT

#### Workspace setup ####
library(tidyverse)
library(arrow) # Ensure arrow is used for reading parquet

#### Clean data ####
raw_data <-
  read_parquet("data/raw_data/raw_data.parquet")

cleaned_data <-
  raw_data |>
  filter(votereg == 1, CC20_410 %in% c(1, 2)) |>
  mutate(
    voted_for = if_else(CC20_410 == 1, "Biden", "Trump"),
    voted_for = as_factor(voted_for),
    gender = if_else(gender == 1, "Male", "Female"),
    age = case_when(
      birthyr <= 1955  ~ "65+",
      birthyr > 1955 & birthyr <= 1975  ~ "45-64",
      birthyr > 1975 & birthyr <= 1990 ~ "30-44",
      birthyr > 1990 & birthyr <= 2002 ~ "18-29",
    ),
    age = factor(
      age,
      levels = c("65+", "45-64", "30-44", "18-29")
    ),
    education = case_when(
      educ == 1 ~ "No HS",
      educ == 2 ~ "High school graduate",
      educ == 3 ~ "Some college",
      educ == 4 ~ "2-year",
      educ == 5 ~ "4-year",
      educ == 6 ~ "Post-grad"
    ),
    education = factor(
      education,
      levels = c("No HS", "High school graduate", "Some college", "2-year", "4-year", "Post-grad")
    )
  ) |>
  select(voted_for, age, gender, education)

#### Save data ####
write_csv(cleaned_data, "data/analysis_data/analysis_data.csv")
write_parquet(cleaned_data, "data/analysis_data/analysis_data.parquet")
These modifications ensure that your data is initially saved as a parquet file, which is more efficient for large datasets, and then both the CSV and parquet formats are provided for the analysis data, offering flexibility in data handling for further analysis or distribution.





